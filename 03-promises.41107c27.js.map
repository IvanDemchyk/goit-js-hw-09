{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAjC5DS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAYF,EAAIG,cAAcf,MAAMgB,cAClCC,EAAOL,EAAIG,cAAcE,KAAKD,cAC9BE,EAAgBN,EAAIG,cAAcI,OAAOH,cAEtCjB,EAAW,EAAGA,GAAYmB,EAAenB,GAAY,EAC5DV,EAAcU,EAAUe,GACxBA,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(evt) {\n  evt.preventDefault();\n  let mainDelay = evt.currentTarget.delay.valueAsNumber;\n  const step = evt.currentTarget.step.valueAsNumber;\n  const promiseAmount = evt.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= promiseAmount; position += 1) {\n    createPromise(position, mainDelay);\n    mainDelay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","document","querySelector","addEventListener","evt","preventDefault","mainDelay","currentTarget","valueAsNumber","step","promiseAmount","amount"],"version":3,"file":"03-promises.41107c27.js.map"}